{"version":3,"sources":["../src/loader.js"],"names":["firstLoad","language","langStringCache","nextcuepoint","cmid","setUp","lang","selector","videoid","coursemoduleid","notifyVideoJS","Event","getLegacyEvents","done","events","document","on","FILTER_CONTENT_UPDATED","config","controlBar","playToggle","captionsButton","chaptersButton","subtitlesButton","remainingTimeDisplay","progressControl","seekBar","fullscreenToggle","playbackRateMenuButton","autoplay","youtube","showinfo","modestbranding","rel","langStrings","getLanguageJson","modulePromises","Promise","all","then","langJson","videojs","options","playbackRates","userActions","hotkeys","addLanguage","ready","myPlayer","src","type","checkTimerProgress","catch","Notification","exception","player","progressinterval","setInterval","currentTime","videoDuration","duration","progress","progressElement","getElementById","style","width","checkCuePointToLog","clearInterval","currentcuepoint","Ajax","call","methodname","args","cuepoint","resolve","cacheKey","rawCacheContent","LocalStorage","get","cacheContent","JSON","parse","request","langStringData","set","result"],"mappings":"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","sourcesContent":["/* eslint-disable */\n\nimport jQuery from 'jquery';\nimport Ajax from 'core/ajax';\nimport Event from 'core/event';\nimport LocalStorage from 'core/localstorage';\nimport Notification from 'core/notification';\n\n/** @var {bool} Whether this is the first load of videojs module */\nlet firstLoad;\n\n/** @var {string} The language that is used in the player */\nlet language;\n\n/** @var {object} List of languages and translations for the current page */\nlet langStringCache;\n\n/** @var {integer} Next cue point to be listened */\nlet  nextcuepoint = 10;\n\n/** @var {integer} The course module id */\nlet  cmid = 0;\n\n/**\n * Set-up.\n *\n * Adds the listener for the event to then notify video.js.\n * @param {string} lang Language to be used in the player\n * @param {string} selector video selector id\n * @param {string} videoid video url\n * @param {integer} coursemoduleid course module id\n */\nexport const setUp = (lang, selector, videoid, coursemoduleid) => {\n    language = lang;\n    firstLoad = true;\n    cmid = coursemoduleid;\n    // Notify Video.js about the nodes already present on the page.\n    notifyVideoJS(selector, videoid);\n    // We need to call popover automatically if nodes are added to the page later.\n    Event.getLegacyEvents().done((events) => {\n        jQuery(document).on(events.FILTER_CONTENT_UPDATED, notifyVideoJS);\n    });\n};\n\n/**\n * Notify video.js of new nodes.\n * @param {string} selector video selector id\n * @param {string} selector video url\n */\nconst notifyVideoJS = (selector, videoid) => {\n    const config = {\n        controlBar: {\n            playToggle: true,\n            captionsButton: false,\n            chaptersButton: false,\n            subtitlesButton: false,\n            remainingTimeDisplay: true,\n            progressControl: {\n                seekBar: false\n            },\n            fullscreenToggle: true,\n            playbackRateMenuButton: false,\n        },\n        autoplay: true,\n        youtube: {\n            showinfo: 0,\n            modestbranding: 1,\n            rel: 0\n        }\n    };\n    const langStrings = getLanguageJson();\n\n    const modulePromises = [import('media_videojs/video-lazy'), import('media_videojs/Youtube-lazy')];\n\n    Promise.all([langStrings, ...modulePromises])\n        .then(([langJson, videojs]) => {\n            if (firstLoad) {\n                videojs.options.playbackRates = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n                videojs.options.userActions = {\n                    hotkeys: true,\n                };\n                videojs.addLanguage(language, langJson);\n\n                firstLoad = false;\n            }\n\n            videojs(selector, config).ready(function() {\n                var myPlayer = this;\n\n                myPlayer.src({ type: 'video/youtube', src: 'https://www.youtube.com/watch?v=' + videoid});\n\n                checkTimerProgress(myPlayer);\n            });\n\n            return;\n        })\n        .catch(Notification.exception);\n};\n\nconst checkTimerProgress = (player) => {\n    let progressinterval = setInterval(() => {\n        var currentTime = player.currentTime();\n        var videoDuration = player.duration();\n\n        var progress = (currentTime * 100) / videoDuration;\n\n        var progressElement = document.getElementById('progress-bar');\n        progressElement.style.width = progress + '%';\n\n        checkCuePointToLog(progress);\n\n        if (progress >= 100) {\n            clearInterval(progressinterval);\n        }\n    }, 500);\n}\n\nconst checkCuePointToLog = (progress) => {\n    if (progress >= nextcuepoint) {\n        let currentcuepoint = nextcuepoint;\n\n        Ajax.call([{\n            methodname: 'mod_youtubewpt_trackprogress',\n            args: {\n                cmid: cmid,\n                cuepoint: currentcuepoint\n            }\n        }]);\n\n        // Increase next cue point to be saved in log.\n        nextcuepoint += 10;\n    }\n}\n\n/**\n * Returns the json object of the language strings to be used in the player.\n *\n * @returns {Promise}\n */\nconst getLanguageJson = () => {\n    if (langStringCache) {\n        return Promise.resolve(langStringCache);\n    }\n\n    const cacheKey = `media_videojs/${language}`;\n\n    const rawCacheContent = LocalStorage.get(cacheKey);\n    if (rawCacheContent) {\n        const cacheContent = JSON.parse(rawCacheContent);\n\n        langStringCache = cacheContent;\n\n        return Promise.resolve(langStringCache);\n    }\n\n    const request = {\n        methodname: 'media_videojs_get_language',\n        args: {\n            lang: language,\n        },\n    };\n\n    return Ajax.call([request])[0]\n        .then(langStringData => {\n            LocalStorage.set(cacheKey, langStringData);\n\n            return langStringData;\n        })\n        .then(result => JSON.parse(result))\n        .then(langStrings => {\n            langStringCache = langStrings;\n\n            return langStrings;\n        });\n};"],"file":"loader.min.js"}